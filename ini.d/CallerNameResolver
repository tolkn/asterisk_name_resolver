#!/bin/sh

### BEGIN INIT INFO
# Provides:          myservice
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Put a short description of the service here
# Description:       Put a long description of the service here
### END INIT INFO

# Change the next 3 lines to suit where you install your script and what you want to call it
DIR=/etc/asterisk_name_resolver
DAEMON=$DIR/CallerNameResolver.py
DAEMON_NAME=CallerNameResolver

# Add any command line options for your daemon here
DAEMON_OPTS=""

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=root

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid

#. /lib/lsb/init-functions

do_start () {
    # see if running

	if [ -f $PIDFILE ]; then
		local pids=$(<$PIDFILE)
		echo "$DAEMON_NAME (pid $pids) is already running"
		return 0
	fi
	
	echo "Starting $DAEMON_NAME"
	python $DAEMON start
	RETVAL=$?
	echo
	return $RETVAL

}
do_stop () {

	if [ -f $PIDFILE ]; then
		echo $"Shutting down $DAEMON_NAME: "
		python $DAEMON stop
		RETVAL=$?
		echo "$DAEMON_NAME (pid $pids) is stoped"
	else
		echo "$DAEMON_NAME not running."
	fi
	
	return $RETVAL
}

case "$1" in

    start|stop)
        do_${1}
        ;;

    restart|reload|force-reload)
        do_stop
        do_start
        ;;

    status)
        status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
        ;;

    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;

esac
exit 0